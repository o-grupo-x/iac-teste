name: Infra GCP

on:
  workflow_dispatch:          # executa manualmente

env:
  PROJECT_ID: app-chamada-stage
  REGION: us-west1
  ZONE: us-west1-a

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      # 0Ô∏è‚É£  Checkout
      - uses: actions/checkout@v4

      # 1Ô∏è‚É£  Autentica√ß√£o GCP
      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      # 2Ô∏è‚É£  Instala gcloud (kubectl inclu√≠do)
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # 3Ô∏è‚É£  Instala Terraform
      - uses: hashicorp/setup-terraform@v3

      # 4Ô∏è‚É£  terraform init / validate / plan
      - name: Terraform Init
        working-directory: gcp
        run: terraform init

      - name: Terraform Validate
        working-directory: gcp
        run: terraform validate

      - name: Terraform Plan
        working-directory: gcp
        env:
          TF_VAR_gcp_credentials: ${{ secrets.GCP_CREDENTIALS_JSON }}
        run: terraform plan

      # üîÑ **NOVO** Importa o Artifact Registry se ele j√° existir
      - name: Import existing Artifact Registry (if any)
        working-directory: gcp
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          REGION: ${{ env.REGION }}
        run: |
          set +e                    # n√£o falha se n√£o existir
          terraform import -no-color \
            google_artifact_registry_repository.frontend \
            projects/${PROJECT_ID}/locations/${REGION}/repositories/frontend
          # ignora c√≥digo de sa√≠da ‚â†0 (repo inexistente)
          true
          set -e

      # 5Ô∏è‚É£  terraform apply
      - name: Terraform Apply
        working-directory: gcp
        env:
          TF_VAR_gcp_credentials: ${{ secrets.GCP_CREDENTIALS_JSON }}
        run: terraform apply -auto-approve
