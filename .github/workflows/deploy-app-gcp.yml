name: Deploy App GCP

on:
  push:
    branches: [main, dev, gui]

env:
  PROJECT_ID: app-chamada-5706
  FRONTEND_REPO: frontend

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1️⃣ Autentica no GCP para gcloud e kubectl
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # 2️⃣ Lê os outputs produzidos pelo Infra GCP
      - name: Get Terraform outputs
        run: |
          gcloud config set project $PROJECT_ID
          CLUSTER_NAME=$(terraform output -raw cluster_name -state=gcp/terraform.tfstate)
          CLUSTER_ZONE=$(terraform output -raw cluster_zone -state=gcp/terraform.tfstate)
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          echo "CLUSTER_ZONE=$CLUSTER_ZONE" >> $GITHUB_ENV
        working-directory: .

      # 3️⃣ Conecta ao cluster
      - name: Get cluster credentials
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --zone "$CLUSTER_ZONE" \
            --project "$PROJECT_ID"

      # 4️⃣ Build & push da imagem
      - name: Build & Push Docker Image
        working-directory: frontend
        run: |
          docker build -t gcr.io/${PROJECT_ID}/${FRONTEND_REPO}:${GITHUB_SHA::8} .
          docker push gcr.io/${PROJECT_ID}/${FRONTEND_REPO}:${GITHUB_SHA::8}

      # 5️⃣ Deploy no Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/
          kubectl set image deployment/frontend frontend=gcr.io/${PROJECT_ID}/${FRONTEND_REPO}:${GITHUB_SHA::8}
